logfile      /var/log/gibson.log
# 0 = DEBUG, 1 = INFO, 2 = WARNING, 3 = ERROR
loglevel     0
# fflush the log every N entries
logflushrate 1

# server config, to create a tcp server instead use:
 	address 127.0.0.1
 	port 10128
unix_socket  /var/run/gibson.sock
# daemonize process
daemonize 0
pidfile   /var/run/gibson.pid

# max memory a gibson instance can use, above this size older items
# will be collected to free space
max_memory       200M
# 1 month
max_item_ttl     2592000
# this value will be used to set the tcp keepalive flag on every client socket.
max_idletime     30
# max simultaneus client
max_clients      2550
# max client request size, since each client request buffer is preallocated, 
# keep in mind that if you use persistent connections from you client side
# you will have at least max_request_size * clients MB of used memory, so
# with 255 max clients and a 10MB max request size you will have more than
# 2GB of memory used.
max_request_size 2M
# max key size
max_key_size 1K
# max value size ( max_request_size - max_key_size - 1 )
max_value_size 2096127 
# max response size
max_response_size 15M
# data that is not being accessed in the last 'gc_ratio' seconds get 
# deleted if the server needs memory.
#
# valid multipler s ( seconds ), m ( minutes ), h ( hours ), d ( days )
gc_ratio 15m

# data above this size is going to be LZF compressed
compression 4K
# number of milliseconds between each cron schedule, do not put a value higher than 1000 :)
cron_period 100
# Check for expired items every 'expired_cron' seconds.
# Expired items can be freed every ttl_cron period or when a client 
# is trying to access them.
#
# valid multipler s ( seconds ), m ( minutes ), h ( hours ), d ( days )
expired_cron 15s
# Check if max memory usage is reached every 'max_mem_cron' seconds.
# Until some memory is not free by this cron, every new value is 
# rejected.
#
# valid multipler s ( seconds ), m ( minutes ), h ( hours ), d ( days )
max_mem_cron 15s

